PARSER_BEGIN(Lugosi)
import java.io.*;
public class Lugosi {

  public static void main(String args[]) throws ParseException,IOException {
    
 Lugosi analisador = new Lugosi(new FileInputStream(args[0]));
 analisador.Lugosi();
  }

}

PARSER_END(Lugosi)

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
}

TOKEN :
{
  <MAIN: "main"> 
| <VAR: "var"> 
| <IF: "if"> 
| <WHILE: "while"> 
| <DO: "do"> 
| <RETURN: "return"> 
| <PRINT: "print"> 
| <FUNCTION: "function"> 
| <TRUE: "true"> 
| <FALSE: "false">
| <INT: "int"> 
| <BOOL: "bool">
}

TOKEN : {
  <LPAREN: "(">
| <RPAREN: ")">
| <LBRACE: "{">
| <RBRACE: "}">
| <SEMICOLON: ";">
| <COMMA: ",">
| <ASSIGN: ":=">
| <PLUS: "+">
| <MINUS: "-">
| <MULT: "*">
| <DIV: "/">
| <AND: "&&">
| <OR: "||">
| <LT: "<">
| <GT: ">">
| <EQ: "==">
}

TOKEN :
{
 <NUM : (["0"-"9"])+>
|< ID: ["a"-"z","A"-"Z"] ( ["a"-"z","A"-"Z","0"-"9"])* (["_"])* >
}



void Lugosi () :
{Token t;}
{

(
  <MAIN> { System.out.println("Palavra reservada: main");}
| <VAR> { System.out.println("Palavra reservada: var");}
| <LBRACE> { System.out.println("Abre chaves: {");}
| <RBRACE> { System.out.println("Fecha chaves: }");}
| t=<NUM> { System.out.println("Numero: "+ t.image);}
| t=<ID> { System.out.println("Identificador: "+ t.image);}
| <SEMICOLON> { System.out.println("Ponto e Virgula: ;");}
| <LPAREN> { System.out.println("Abre parenteses: (");}
| <RPAREN> { System.out.println("Fecha parenteses: )");}
| <COMMA> { System.out.println("Vírgula: ,");}
| <ASSIGN> { System.out.println("Atribuicao: =");}
| <PLUS> { System.out.println("Operador de soma: +");}
| <MINUS> { System.out.println("Operador de subtracao: -");}
| <MULT> { System.out.println("Operador de multiplicacao: *");}
| <DIV> { System.out.println("Operador de divisão: /");}
| <AND> { System.out.println("Operador logico AND: &&");}
| <OR> { System.out.println("Operador logico OR: ||");}
| <LT> { System.out.println("Operador relacional menor que: <");}
| <GT> { System.out.println("Operador relacional maior que: >");}
| <EQ> { System.out.println("Operador relacional igual a: ==");}
| <IF> { System.out.println("Palavra reservada: if");}
| <WHILE> { System.out.println("Palavra reservada: while");}
| <DO> { System.out.println("Palavra reservada: do");}
| <RETURN> { System.out.println("Palavra reservada: return");}
| <PRINT> { System.out.println("Palavra reservada: print");}
| <FUNCTION> { System.out.println("Palavra reservada: function");}
| <TRUE> { System.out.println("Valor booleano verdadeiro: true");}
| <FALSE> { System.out.println("Valor booleano falso: false");}
| <INT> { System.out.println("Palavra reservada: int");}
| <BOOL> { System.out.println("Palavra reservada: bool");}
)*
<EOF> 


}





